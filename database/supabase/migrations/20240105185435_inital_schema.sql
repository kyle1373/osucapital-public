create table "public"."whitelist" (
    "user_id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now()
);


alter table "public"."whitelist" enable row level security;

CREATE UNIQUE INDEX whitelist_pkey ON public.whitelist USING btree (user_id);

alter table "public"."whitelist" add constraint "whitelist_pkey" PRIMARY KEY using index "whitelist_pkey";

alter table "public"."whitelist" add constraint "whitelist_user_id_fkey" FOREIGN KEY (user_id) REFERENCES users(user_id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."whitelist" validate constraint "whitelist_user_id_fkey";

grant delete on table "public"."whitelist" to "anon";

grant insert on table "public"."whitelist" to "anon";

grant references on table "public"."whitelist" to "anon";

grant select on table "public"."whitelist" to "anon";

grant trigger on table "public"."whitelist" to "anon";

grant truncate on table "public"."whitelist" to "anon";

grant update on table "public"."whitelist" to "anon";

grant delete on table "public"."whitelist" to "authenticated";

grant insert on table "public"."whitelist" to "authenticated";

grant references on table "public"."whitelist" to "authenticated";

grant select on table "public"."whitelist" to "authenticated";

grant trigger on table "public"."whitelist" to "authenticated";

grant truncate on table "public"."whitelist" to "authenticated";

grant update on table "public"."whitelist" to "authenticated";

grant delete on table "public"."whitelist" to "service_role";

grant insert on table "public"."whitelist" to "service_role";

grant references on table "public"."whitelist" to "service_role";

grant select on table "public"."whitelist" to "service_role";

grant trigger on table "public"."whitelist" to "service_role";

grant truncate on table "public"."whitelist" to "service_role";

grant update on table "public"."whitelist" to "service_role";


