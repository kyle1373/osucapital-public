create sequence "public"."season_leaderboards_leaderboard_id_seq";

create sequence "public"."seasons_season_id_seq";

create table "public"."season_leaderboards" (
    "leaderboard_id" integer not null default nextval('season_leaderboards_leaderboard_id_seq'::regclass),
    "season_id" integer,
    "user_id" bigint not null,
    "total_coins" numeric not null,
    "recorded_at" timestamp with time zone default CURRENT_TIMESTAMP
);


alter table "public"."season_leaderboards" enable row level security;

create table "public"."seasons" (
    "season_id" integer generated by default as identity not null,
    "season_name" character varying(255) not null,
    "start_date" timestamp with time zone not null,
    "end_date" timestamp with time zone not null
);


alter table "public"."seasons" enable row level security;

alter sequence "public"."season_leaderboards_leaderboard_id_seq" owned by "public"."season_leaderboards"."leaderboard_id";

alter sequence "public"."seasons_season_id_seq" owned by "public"."seasons"."season_id";

CREATE UNIQUE INDEX season_leaderboards_pkey ON public.season_leaderboards USING btree (leaderboard_id);

CREATE UNIQUE INDEX seasons_pkey ON public.seasons USING btree (season_id);

CREATE UNIQUE INDEX seasons_season_id_key ON public.seasons USING btree (season_id);

alter table "public"."season_leaderboards" add constraint "season_leaderboards_pkey" PRIMARY KEY using index "season_leaderboards_pkey";

alter table "public"."seasons" add constraint "seasons_pkey" PRIMARY KEY using index "seasons_pkey";

alter table "public"."season_leaderboards" add constraint "season_leaderboards_user_id_fkey" FOREIGN KEY (user_id) REFERENCES users(user_id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."season_leaderboards" validate constraint "season_leaderboards_user_id_fkey";

alter table "public"."seasons" add constraint "seasons_season_id_key" UNIQUE using index "seasons_season_id_key";

set check_function_bodies = off;

CREATE OR REPLACE FUNCTION public.populate_season_leaderboard(p_season_id integer)
 RETURNS void
 LANGUAGE plpgsql
AS $function$
BEGIN
    -- Insert total coins for each user into season_leaderboards
    INSERT INTO season_leaderboards (season_id, user_id, total_coins)
    SELECT
        p_season_id,
        u.user_id,
        u.coins_held + COALESCE(SUM(us.num_shares * COALESCE(s.share_price, 0)), 0) AS total_coins
    FROM
        users u
        LEFT JOIN users_stocks us ON u.user_id = us.user_id
        LEFT JOIN stocks s ON us.stock_id = s.stock_id
    GROUP BY
        u.user_id;

    -- If needed, you can also perform additional operations here
END;
$function$
;

grant delete on table "public"."season_leaderboards" to "anon";

grant insert on table "public"."season_leaderboards" to "anon";

grant references on table "public"."season_leaderboards" to "anon";

grant select on table "public"."season_leaderboards" to "anon";

grant trigger on table "public"."season_leaderboards" to "anon";

grant truncate on table "public"."season_leaderboards" to "anon";

grant update on table "public"."season_leaderboards" to "anon";

grant delete on table "public"."season_leaderboards" to "authenticated";

grant insert on table "public"."season_leaderboards" to "authenticated";

grant references on table "public"."season_leaderboards" to "authenticated";

grant select on table "public"."season_leaderboards" to "authenticated";

grant trigger on table "public"."season_leaderboards" to "authenticated";

grant truncate on table "public"."season_leaderboards" to "authenticated";

grant update on table "public"."season_leaderboards" to "authenticated";

grant delete on table "public"."season_leaderboards" to "service_role";

grant insert on table "public"."season_leaderboards" to "service_role";

grant references on table "public"."season_leaderboards" to "service_role";

grant select on table "public"."season_leaderboards" to "service_role";

grant trigger on table "public"."season_leaderboards" to "service_role";

grant truncate on table "public"."season_leaderboards" to "service_role";

grant update on table "public"."season_leaderboards" to "service_role";

grant delete on table "public"."seasons" to "anon";

grant insert on table "public"."seasons" to "anon";

grant references on table "public"."seasons" to "anon";

grant select on table "public"."seasons" to "anon";

grant trigger on table "public"."seasons" to "anon";

grant truncate on table "public"."seasons" to "anon";

grant update on table "public"."seasons" to "anon";

grant delete on table "public"."seasons" to "authenticated";

grant insert on table "public"."seasons" to "authenticated";

grant references on table "public"."seasons" to "authenticated";

grant select on table "public"."seasons" to "authenticated";

grant trigger on table "public"."seasons" to "authenticated";

grant truncate on table "public"."seasons" to "authenticated";

grant update on table "public"."seasons" to "authenticated";

grant delete on table "public"."seasons" to "service_role";

grant insert on table "public"."seasons" to "service_role";

grant references on table "public"."seasons" to "service_role";

grant select on table "public"."seasons" to "service_role";

grant trigger on table "public"."seasons" to "service_role";

grant truncate on table "public"."seasons" to "service_role";

grant update on table "public"."seasons" to "service_role";


